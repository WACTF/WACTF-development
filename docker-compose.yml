# The docker-compose file you deliver needs to:
# - Define which ports are exposed, and what they map to in your challenge
# - Name and tag the container for use on the docker registry
# - Define the folder that your dockerfile (and challenge source code) exists in

# The version MUST be 3.8
version: '3.8'
# This is general structure of the docker-compose file that will be used in prod
services:

# Name is <category>-<tier>
# If there are multiple containers for your category and tier, name them like so <category>-<tier>-<function> i.e. exp-3-mongodb / exp-3-website
  exp-3:
  # Your container name is <category>-<tier>
    container_name: exp-3
    # This should be the directory your dockerfile exists in.
    # Note, other challenges will live in ./ too, so ensure your directory name is adequately unique (ie. exp-3)
    build: ./exp-3/
    # Your challenges need to be tagged for pushing to the docker registry. The syntax is <domain>:<port>/wactf0x05/<container name>
    image: registry.capture.tf:5000/wactf0x05/exp-3
    # Ports! the syntax is <external>:<containerlocal>
    # See here for more info: https://github.com/WACTF/WACTF-development/blob/master/README-Setup.md#port-ranges
    # If you need your container to bind to a privileged port (such as running a webserver) checkout the Examples-Dockerfiles/ directory
    ports:
      - 80:2222
    deploy:
      # You need to benchmark your container(s). It's super important your container doesn't OOM itself during normal game load
      # See here: https://github.com/WACTF/WACTF-development/blob/master/README-Setup.md#benchmarking
      resources:
        limits:
          cpus: '0.10' # bump this up if you need but speak to an organiser if you need >0.3.
          memory: 180M
        reservations:
          cpus: '0.05' # this represents 5% of a CPU core on the Kubernetes cluster. only change this if your container is unusably slow at idle
          memory: 10M
    cap_drop:
      - NET_RAW

# Want to include something else in docker-compose that's not in this template?
# Look up its compatibility here: https://kompose.io/conversion/
